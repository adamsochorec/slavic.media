import {
  script
} from "./chunk-HA5T7MOX.js";
import "./chunk-ISUEOLY6.js";
import {
  $dt,
  BaseStyle,
  setCSSProperty
} from "./chunk-M4EG2O2J.js";
import "./chunk-33JGBU2L.js";
import "./chunk-BUSYA2B4.js";

// node_modules/@primeuix/styles/imagecompare/index.mjs
var style = ({ dt: e }) => `
.p-imagecompare {
    position: relative;
    overflow: hidden;
    width: 100%;
    aspect-ratio: 16 / 9;
}

.p-imagecompare img {
    width: 100%;
    height: 100%;
    position: absolute;
}

.p-imagecompare img + img {
    clip-path: polygon(0 0, ${e("imagecompare.scope.x", "50%")} 0, ${e("imagecompare.scope.x", "50%")} 100%, 0 100%);
}

.p-imagecompare:dir(rtl) img + img {
    clip-path: polygon(calc(100% - ${e("imagecompare.scope.x", "50%")}) 0, 100% 0, 100% 100%, calc(100% - ${e("imagecompare.scope.x", "50%")}) 100%);
}

.p-imagecompare-slider {
    position: relative;
    -webkit-appearance: none;
    width: calc(100% + ${e("imagecompare.handle.size")});
    height: 100%;
    margin-inline-start: calc(-1 * calc(${e("imagecompare.handle.size")} / 2));
    background-color: transparent;
    outline: none;
    transition: all ${e("imagecompare.handle.transition.duration")};
}

.p-imagecompare-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: ${e("imagecompare.handle.size")};
    width: ${e("imagecompare.handle.size")};
    background: ${e("imagecompare.handle.background")};
    border: ${e("imagecompare.handle.border.width")} solid ${e("imagecompare.handle.border.color")};
    border-radius: ${e("imagecompare.handle.border.radius")};
    background-size: contain;
    cursor: ew-resize;
    transition: all ${e("imagecompare.handle.transition.duration")};
}

.p-imagecompare-slider::-moz-range-thumb {
    height: ${e("imagecompare.handle.size")};
    width: ${e("imagecompare.handle.size")};
    background: ${e("imagecompare.handle.background")};
    border: ${e("imagecompare.handle.border.width")} ${e("imagecompare.handle.border.style")} ${e("imagecompare.handle.border.color")};
    border-radius: ${e("imagecompare.handle.border.radius")};
    background-size: contain;
    cursor: ew-resize;
}

.p-imagecompare-slider:focus-visible::-webkit-slider-thumb {
    box-shadow: ${e("imagecompare.handle.focus.ring.shadow")};
    outline: ${e("imagecompare.handle.focus.ring.width")} ${e("imagecompare.handle.focus.ring.style")} ${e("imagecompare.handle.focus.ring.color")};
    outline-offset: ${e("imagecompare.handle.focus.ring.offset")};
}

.p-imagecompare-slider:focus-visible::-moz-range-thumb {
    box-shadow: ${e("imagecompare.handle.focus.ring.shadow")};
    outline: ${e("imagecompare.handle.focus.ring.width")} ${e("imagecompare.handle.focus.ring.style")} ${e("imagecompare.handle.focus.ring.color")};
    outline-offset: ${e("imagecompare.handle.focus.ring.offset")};
}

.p-imagecompare-slider:hover {
    width: calc(100% + ${e("imagecompare.handle.hover.size")});
    margin-inline-start: calc(-1 * calc(${e("imagecompare.handle.hover.size")} / 2));
}

.p-imagecompare-slider:hover::-webkit-slider-thumb {
    background: ${e("imagecompare.handle.hover.background")};
    border-color: ${e("imagecompare.handle.hover.border.color")};
    height: ${e("imagecompare.handle.hover.size")};
    width: ${e("imagecompare.handle.hover.size")};
}

.p-imagecompare-slider:hover::-moz-range-thumb {
    background: ${e("imagecompare.handle.hover.background")};
    border-color: ${e("imagecompare.handle.hover.border.color")};
    height: ${e("imagecompare.handle.hover.size")};
    width: ${e("imagecompare.handle.hover.size")};
}
`;

// node_modules/primevue/imagecompare/style/index.mjs
var classes = {
  root: "p-imagecompare",
  slider: "p-imagecompare-slider"
};
var ImageCompareStyle = BaseStyle.extend({
  name: "imagecompare",
  style,
  classes
});

// node_modules/primevue/imagecompare/index.mjs
import { createElementBlock, openBlock, mergeProps, renderSlot, createElementVNode } from "vue";
var script$1 = {
  name: "BaseImageCompare",
  "extends": script,
  props: {
    tabindex: {
      type: Number,
      "default": 0
    },
    ariaLabelledby: {
      type: String,
      "default": null
    },
    ariaLabel: {
      type: String,
      "default": null
    }
  },
  style: ImageCompareStyle,
  provide: function provide() {
    return {
      $pcImageCompare: this,
      $parentInstance: this
    };
  }
};
var script2 = {
  name: "ImageCompare",
  "extends": script$1,
  methods: {
    onSlide: function onSlide(event) {
      var value = event.target.value;
      var image = event.target.previousElementSibling;
      setCSSProperty(image, $dt("imagecompare.scope.x").name, "".concat(value, "%"));
    }
  }
};
var _hoisted_1 = ["aria-labelledby", "aria-label"];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    "class": _ctx.cx("root"),
    "aria-labelledby": _ctx.ariaLabelledby,
    "aria-label": _ctx.ariaLabel
  }, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "left"), renderSlot(_ctx.$slots, "right"), createElementVNode("input", mergeProps({
    type: "range",
    min: "0",
    max: "100",
    value: "50",
    onInput: _cache[0] || (_cache[0] = function() {
      return $options.onSlide && $options.onSlide.apply($options, arguments);
    }),
    "class": _ctx.cx("slider")
  }, _ctx.ptm("slider")), null, 16)], 16, _hoisted_1);
}
script2.render = render;
export {
  script2 as default
};
//# sourceMappingURL=primevue_imagecompare.js.map
